image: node:16-buster

stages:
  - lint
  - quality
  - security
  - build
  - coverage
  - test

cache:
  key:
    files:
      - yarn.lock
  paths:
    - .yarn # @todo Useless if .yarn directory is committed in git ?

default:
  before_script:
    - corepack enable
    - yarn config set npmRegistryServer ${NPM_DEFAULT_MIRROR}
    - yarn install --immutable --immutable-cache

include:
  - template: Code-Quality.gitlab-ci.yml

lint:
  stage: lint
  tags:
    - linux
    - docker
  script:
    - yarn run lint-check
    - yarn run type-check

code_quality:
  stage: quality
  needs: []

sonarqube_check:
  stage: quality
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  needs: 
    - lint
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
    # GIT_SUBMODULE_STRATEGY: "recursive" # fetch submodules before the job
    # GIT_SUBMODULE_UPDATE_FLAGS: --remote # Forces update to the remote HEAD
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  before_script:
    # get credentials
    - curl -o /tmp/vault.zip ${VAULT_BINARY_URL}
    - unzip /tmp/vault.zip -d /usr/local/bin
    - chmod +x /usr/local/bin/vault
    - export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=ci-commons jwt=$CI_JOB_JWT)"
    - export SONAR_LOGIN="$(vault kv get -field=token secrets/open-Digital-Factory/sonarqube/scanner)"
  script: 
    # add this option if you have submodules: -Dsonar.scm.exclusions.disabled=true
    # projectKey must be immutable. Be careful when renaming project.
    - sonar-scanner -Dsonar.login=$SONAR_LOGIN -Dsonar.projectKey=${CI_PROJECT_NAME}_${CI_PROJECT_ID} -Dsonar.projectName=${CI_PROJECT_NAME} -Dsonar.qualitygate.wait=true

  allow_failure: true

.dtrack:
  stage: security
  tags:
    - linux
    - docker
  needs: 
    - lint
  before_script:
    - curl -o /tmp/vault.zip ${VAULT_BINARY_URL}
    - unzip /tmp/vault.zip -d /usr/local/bin
    - chmod +x /usr/local/bin/vault
    - export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=ci-commons jwt=$CI_JOB_JWT)"
    - export DTRACK_APIKEY="$(vault kv get -field=apikey secrets/open-Digital-Factory/dtrack)"
    - corepack enable
    - corepack enable
    - yarn config set npmRegistryServer ${NPM_DEFAULT_MIRROR}
    - yarn install --immutable --immutable-cache
  script:
    - yarn run predtrack
    - yarn run dtrack --baseUrl=${DTRACK_BASE_URL}
  allow_failure: true

build:
  stage: build
  tags:
    - linux
    - docker
  needs: 
    - lint
  artifacts:
    paths:
      - dist/
    expire_in: 1 hour
  script:
    - yarn run build

# @todo enable when https://github.com/vitest-dev/vitest/issues/1669 is fixed
.test-unit:
  stage: test
  tags:
    - linux
    - docker
  needs:
    - build
  script:
    - yarn run test:unit
  artifacts:
    when: always
    reports:
      junit:
        - junit.xml

test-unit-coverage:
  stage: coverage
  tags:
    - linux
    - docker
  needs:
    - build
  script:
    - yarn run test:unit:coverage
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml

# @todo enable when https://github.com/cypress-io/cypress/issues/22747 is fixed
.test_e2e:
  image: cypress/base:16
  stage: test
  tags:
    - linux
    - docker
  needs: 
    - build
  script:
    - yarn run test:e2e:ci
